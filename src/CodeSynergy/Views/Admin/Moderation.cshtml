@using NonFactors.Mvc.Grid

@{
    ViewData["Title"] = "Moderation";
}

<script type="text/javascript">
    var editPattern = false;

    $(document).ready(function () {
        // Set ban button click event
        $("#banBtn:not(:disabled)").click(function () {
            $.ajax({
                type: "POST",
                url: '/Admin/BanUser',
                contentType: "application/x-www-form-urlencoded; charset=utf-8",
                data: {
                    userDisplayName: $("#userDisplayName").val(),
                    banTerm: $("#banTermSelect").val(),
                    banReason: $("#banReason").val(),
                    __RequestVerificationToken: $("#modal input[name=__RequestVerificationToken]").val()

                },
                dataType: "json",
                success: function (data) {
                    if (data[0] == 0) { // Action succeeded
                        // Reload user ban grid
                        $('#userBanGrid').mvcgrid({
                            reloadStarted: function (grid) {
                                $("#userBanGrid").css("opacity", 0.5);
                            },
                            reloadEnded: function (grid) {
                                $("#userBanGrid").css("opacity", null);
                            },
                            reload: true
                        });
                    } else // Action failed: display error message
                        alert(data[1]);
                },
                error: function () { alert("Error: Something went wrong while attempting to ban the user"); }
            });
        });

        // Set change ban term button click event
        $("#banTermBtn:not(:disabled)").click(function () {
            $.ajax({
                type: "POST",
                url: '/Admin/ChangeBanTerm',
                contentType: "application/x-www-form-urlencoded; charset=utf-8",
                data: {
                    banID: $("#banID").val(),
                    banTerm: $("#banTermSelect2").val(),
                    __RequestVerificationToken: $("#modal input[name=__RequestVerificationToken]").val()

                },
                dataType: "json",
                success: function (data) {
                    if (data[0] == 0) { // Action succeeded
                        // Reload user ban grid
                        $('#userBanGrid').mvcgrid({
                            reloadStarted: function (grid) {
                                $("#userBanGrid").css("opacity", 0.5);
                            },
                            reloadEnded: function (grid) {
                                $("#userBanGrid").css("opacity", null);
                            },
                            reload: true
                        });
                    } else // Action failed: display error message
                        alert(data[1]);
                },
                error: function () { alert("Error: Something went wrong while attempting to change the ban term"); }
            });
        });

        // Set lift ban button click event
        $("#liftBanBtn:not(:disabled)").click(function () {
            $.ajax({
                type: "POST",
                url: '/Admin/LiftBan',
                contentType: "application/x-www-form-urlencoded; charset=utf-8",
                data: {
                    banID: $("#banID").val(),
                    __RequestVerificationToken: $("#modal input[name=__RequestVerificationToken]").val()

                },
                dataType: "json",
                success: function (data) {
                    if (data[0] == 0) { // Action succeeded
                        $('#userBanGrid').mvcgrid({ // Reload user ban grid
                            reloadStarted: function (grid) {
                                $("#userBanGrid").css("opacity", 0.5);
                            },
                            reloadEnded: function (grid) {
                                $("#userBanGrid").css("opacity", null);
                            },
                            reload: true
                        });
                    } else // Action failed: display error message
                        alert(data[1]);
                },
                error: function () { alert("Error: Something went wrong while attempting to lift the ban."); }
            });
        });

        // Set event for typing in the pattern textfield (enabling/disabling buttons according to whether it's empty)
        $("#patternText").keyup(function () {
            $("#addPatternBtn").attr("disabled", editPattern || $(this).val() == "" ? true : null);
            $("#savePatternBtn, #cancelPatternBtn").attr("disabled", !editPattern || $(this).val() == "" ? true : null);
        });

        // Set add pattern button click event
        $("#addPatternBtn:not(:disabled)").click(function () {
            $.ajax({
                type: "POST",
                url: '/Admin/AddUntrustedURLPattern',
                contentType: "application/x-www-form-urlencoded; charset=utf-8",
                data: {
                    patternText: $("#patternText").val(),
                    __RequestVerificationToken: $("#modal input[name=__RequestVerificationToken]").val()

                },
                dataType: "json",
                success: function (data) {
                    if (data[0] == 0) { // Action succeeded
                        $('#untrustedURLPatternGrid').mvcgrid({ // Reload untrusted URL pattern grid
                            reloadStarted: function (grid) {
                                $("#untrustedURLPatternGrid").css("opacity", 0.5);
                            },
                            reloadEnded: function (grid) {
                                $("#untrustedURLPatternGrid").css("opacity", null);
                            },
                            reload: true
                        });
                    } else if (data[1] != null) // Action failed: display error message
                        alert(data[1]);
                },
                error: function () { alert("Error: Something went wrong while attempting to add the untrusted URL pattern."); }
            });
        });

        $("#editPatternBtn:not(:disabled)").click(function () {
            togglePatternEdit(true);
        });

        // Set save pattern button click event
        $("#savePatternBtn:not(:disabled)").click(function () {
            $.ajax({
                type: "POST",
                url: 'Admin/UpdateUntrustedURLPattern',
                contentType: "application/x-www-form-urlencoded; charset=utf-8",
                data: {
                    patternID: $("#patternID").val(),
                    patternText: $("#patternText").val(),
                    __RequestVerificationToken: $("#modal input[name=__RequestVerificationToken]").val()

                },
                dataType: "json",
                success: function (data) {
                    if (data[0] == 0) { // Action succeeded
                        $('#untrustedURLPatternGrid').mvcgrid({ // Reload untrusted URL pattern grid
                            reloadStarted: function (grid) {
                                $("#untrustedURLPatternGrid").css("opacity", 0.5);
                            },
                            reloadEnded: function (grid) {
                                $("#untrustedURLPatternGrid").css("opacity", null);
                            },
                            reload: true
                        });
                    } else if (data[1] != null) // Action failed: display error message
                        alert(data[1]);
                    togglePatternEdit(false);
                },
                error: function () { alert("Error: Something went wrong while attempting to modify the untrusted URL pattern"); togglePatternEdit(false); }
            });
        });

        // Set cancel pattern button click event
        $("#cancelPatternBtn:not(:disabled)").click(function () {
            togglePatternEdit(false);
        });

        // Set delete pattern button click event
        $("#deletePatternBtn:not(:disabled)").click(function () {
            $.ajax({
                type: "POST",
                url: '/Admin/DeleteUntrustedURLPattern',
                contentType: "application/x-www-form-urlencoded; charset=utf-8",
                data: {
                    patternID: $("#patternID").val(),
                    __RequestVerificationToken: $("#modal input[name=__RequestVerificationToken]").val()
                },
                dataType: "json",
                success: function (data) {
                    if (data[0] == 0) { // Action succeeded
                        $('#untrustedURLPatternGrid').mvcgrid({ // Reloaded untrusted URL pattern grid
                            reloadStarted: function (grid) {
                                $("#untrustedURLPatternGrid").css("opacity", 0.5);
                            },
                            reloadEnded: function (grid) {
                                $("#untrustedURLPatternGrid").css("opacity", null);
                            },
                            reload: true
                        });
                    } else if (data[1] != null) // Action failed: display error message
                        alert(data[1]);
                },
                error: function () { alert("Error: Something went wrong while attempting to delete the untrusted URL pattern"); }
            });
        });

        // Create/load cookies for grid sort options
        var gridData = localStorage.getItem("gridData") != null ? JSON.parse(localStorage.getItem("gridData")) : null;
        if (gridData == null) {
            gridData = {};
            gridData["userBanGrid"] = { "columnIndex": 6, "sortAsc": false };
            gridData["untrustedURLPatternGrid"] = { "columnIndex": 0, "sortAsc": false };
            localStorage.setItem("gridData", JSON.stringify(gridData));
        } else {
            if (gridData["userBanGrid"] == null) {
                gridData["userBanGrid"] = { "columnIndex": 6, "sortAsc": false };
                localStorage.setItem("gridData", JSON.stringify(gridData));
            }
            if (gridData["untrustedURLPatternGrid"] == null) {
                gridData["untrustedURLPatternGrid"] = { "columnIndex": 0, "sortAsc": false };
                localStorage.setItem("gridData", JSON.stringify(gridData));
            }
        }

        // Initialize grids
        $('#modal .mvc-grid').mvcgrid({
            rowClicked: function (grid, row, data, e) {
                if (!$(row).children("td:first-child").hasClass("mvc-grid-empty")) {
                    $(row).siblings().removeClass('selected');
                    $(row).toggleClass('selected');
                    if ($(grid.element).is("#userBanGrid")) {
                        if ($(row).hasClass('selected')) {
                            $("#banID").val(data["BanID"]);
                            if (data["BannedUserRole"] == "Administrator") {
                                @if (User.Identity.Name == "admin@codesynergy.com") {
                                    @Html.Raw("$('.ban-controls a, .ban-controls select').attr('disabled', null); $('#banTermSelect2').val(data['BanTerm']);");
                                }
                            } else {
                                $('.ban-controls a, .ban-controls select').attr('disabled', null);
                                $("#banTermSelect2").val($("#banTermSelect option:contains(" + data["BanTerm"] + ")").index());
                            }
                        } else {
                            $("#banID").val("");
                            $('.ban-controls a, .ban-controls select').attr("disabled", true);
                        }
                    } else {
                        if (editPattern)
                            $("#patternText").val(data["PatternText"]);
                        if ($(row).hasClass('selected')) {
                            $("#patternID").val(data["PatternID"]);
                            if (data["AddedByUserRole"] == "Administrator") {
                                @if (User.Identity.Name == "admin@codesynergy.com") {
                                    @Html.Raw("$('#editPatternBtn, #deletePatternBtn').attr('disabled', editPattern ? true : null);");
                                }
                            } else
                                $('#editPatternBtn, #deletePatternBtn').attr('disabled',　editPattern ? true : null);
                        } else {
                            $("#patternID").val("");
                            $("#editPatternBtn, #deletePatternBtn").attr("disabled", true);
                        }
                    }
                }
            }
        });
    });

    // Enable or disable edit mode for untrusted URL patterns
    function togglePatternEdit(enable) {
        editPattern = enable;
        if ($(".table > tbody > tr.selected").length == 1) {
            $("#patternText").val($(".table > tbody > tr.selected > td:nth-child(5)").html());
            $("#editPatternBtn, #deletePatternBtn").attr("disabled", enable ? true : null);
        } else {
            $("#editPatternBtn, #deletePatternBtn").attr("disabled", true);
        }
        
        $("#savePatternBtn, #cancelPatternBtn").attr("disabled", enable ? null : true);
        $("#addPatternBtn").attr("disabled", enable ? true : null);
    }
</script>

<div>
    <h4 class="toggle-section" data-section-id="active-bans">Active Bans</h4>
    <hr />
    <section id="active-bans">
        <div class="col-md-4">
            <input type="text" id="userDisplayName" name="userDisplayName" class="form-control" placeholder="Enter a display name" value="@ViewData["DisplayName"]" maxlength="20" />
        </div>
        <div class="col-md-2">
            <select id="banTermSelect" name="banTermSelect" class="form-control">
                @foreach (EnumBanTerm b in ViewBag.BanTerms)
                {
                    <option value="@((short)b)">
                        @b.DisplayName()
                    </option>
                }
            </select>
        </div>
        <div class="col-md-4">
            <textarea id="banReason" class="form-control" placeholder="Enter a ban reason" maxlength="255"></textarea>
        </div>
        <div class="col-md-2">
            <a id="banBtn" href="javascript:void(0);" class="btn btn-primary btn-block">Ban</a>
        </div>
        @Html.AntiForgeryToken()
        <br />
        <br />
        <br />
        <section>
            @Html.AjaxGrid(Url.Action("UserBanGrid", new {
                ColumnIndex = (Context.Request.Query.Keys.Contains("userBanGrid[columnIndex]") ? (string) Context.Request.Query["userBanGrid[columnIndex]"] : null),
                SortAsc = (Context.Request.Query.Keys.Contains("userBanGrid[sortAsc]") ? (string) Context.Request.Query["userBanGrid[sortAsc]"] : null)
            }))
        </section>
        <br />
        <div class="ban-controls">
            <input id="banID" type="hidden" />
            <div class="col-md-4">
                <a id="banTermBtn" href="javascript:void(0);" class="btn btn-primary btn-block" disabled>Change Ban Term</a>
            </div>
            <div class="col-md-2">
                <select id="banTermSelect2" class="form-control" disabled>
                    @foreach (EnumBanTerm b in ViewBag.BanTerms)
                    {
                        <option value="@((short) b)">
                            @b.DisplayName()
                        </option>
                    }
                </select>
            </div>
            <div class="col-md-4"></div>
            <div class="col-md-2">
                <a id="liftBanBtn" href="javascript:void(0);" class="btn btn-primary btn-block" disabled>Lift Ban</a>
            </div>
        </div>
        <br />
        <br />
    </section>
</div>
<div>
    <h4 class="toggle-section" data-section-id="untrusted-url-patterns">Untrusted URL Patterns</h4>
    <hr />
    <section id="untrusted-url-patterns">
        <div class="col-md-8">
            <section>
                @Html.AjaxGrid(Url.Action("UntrustedURLPatternGrid", new
                {
                    ColumnIndex = (Context.Request.Query.Keys.Contains("untrustedURLPatternGrid[columnIndex]") ? (string) Context.Request.Query["untrustedURLPatternGrid[columnIndex]"] : null),
                    SortAsc = (Context.Request.Query.Keys.Contains("untrustedURLPatternGrid[sortAsc]") ? (string) Context.Request.Query["untrustedURLPatternGrid[sortAsc]"] : null)
                }))
            </section>
        </div>
        <input id="patternID" type="hidden" />
        <div class="col-md-1">
            <a id="addPatternBtn" href="javascript:void(0);" class="btn btn-primary btn-block" disabled>Add</a>
        </div>
        <div class="col-md-3">
            <input id="patternText" type="text" class="form-control" placeholder="Enter a Regular Expression" style="margin-bottom: 25px;" />
        </div>
        <div class="col-md-1">
            <a id="editPatternBtn" href="javascript:void(0);" class="btn btn-primary btn-block" disabled>Edit</a>
            <a id="deletePatternBtn" href="javascript:void(0);" class="btn btn-danger btn-block" disabled>Delete</a>
        </div>
        <div class="col-md-1">
            <a id="cancelPatternBtn" href="javascript:void(0);" class="btn btn-primary btn-block" disabled>Cancel</a>
        </div>
        <div class="col-md-2">
            <a id="savePatternBtn" href="javascript:void(0);" class="btn btn-success btn-block" disabled>Save Changes</a>
        </div>
    </section>
</div>