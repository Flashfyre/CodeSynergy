@using NonFactors.Mvc.Grid;

@inject UserManager UserManager

@{
    ViewData["Title"] = "Starred Questions";
    ApplicationUser user = Context.Request.HttpContext.User.Identity.Name != null ? await UserManager.FindByEmailAsync(Context.Request.HttpContext.User.Identity.Name) : null;
    TagInputViewModel tagInputViewModel = new TagInputViewModel(null, true);
}

<style type="text/css">
    #starredQuestionGrid th i {
        color: #004080;
    }

    #starredQuestionGrid td, #starredQuestionGrid th {
        vertical-align: middle;
    }

    #starredQuestionGrid td h2, #starredQuestionGrid td h4 {
        margin: 0;
        color: #333;
    }

    #starredQuestionGrid .fa-stack.fa-stack-1x {
        margin-top: -20px;
    }

    #starredQuestionGrid span.asc > span.fa-stack.fa-stack-1x, #starredQuestionGrid span.desc > .fa-stack.fa-stack-1x {
        margin-top: -10px;
    }

    #starredQuestionGrid .fa-stack.fa-stack-1x > .fa-stack-1x:first-child {
        margin-top: 10px;
    }
</style>

@Html.Partial("_ProfileBackgroundPartial", user)

@Html.Partial("_TagFilterPartial", tagInputViewModel)

@Html.Partial("_TagInputScriptsPartial", tagInputViewModel)

<script type="text/javascript">
    $(document).ready(function () {
        var gridName = "starredQuestionGrid";
        var gridData = localStorage.getItem("gridData") != null ? JSON.parse(localStorage.getItem("gridData")) : null;
        if (gridData == null) {
            gridData = {};
            gridData[gridName] = { "columnIndex": 8, "sortAsc": false };
            localStorage.setItem("gridData", JSON.stringify(gridData));
        } else if (gridData[gridName] == null) {
            gridData[gridName] = { "columnIndex": 8, "sortAsc": false };
            localStorage.setItem("gridData", JSON.stringify(gridData));
        }

        $("#main .mvc-grid").mvcgrid({
            filters: {
                'TagFilter': new TagFilter()
            },
            rowClicked: function (grid, row, data, e) {
                if (!$(row).children("td:first-child").hasClass("mvc-grid-empty")) {
                    window.location.href = "/Question/" + data["Question.QuestionID"];
                }
            }
        });
    });
</script>

<div class="row">
    <div class="col-md-12">
        <h2>@ViewData["Title"]</h2>
        <hr />
        @Html.AjaxGrid(Url.Action("StarredQuestionGrid", new { ColumnIndex = (Context.Request.Query.Keys.Contains("starredQuestionGrid[columnIndex]") ?  (String) Context.Request.Query["starredQuestionGrid[columnIndex]"] : null),
            SortAsc = (Context.Request.Query.Keys.Contains("starredQuestionGrid[sortAsc]") ? (String) Context.Request.Query["starredQuestionGrid[sortAsc]"] : null), UseSearchGrid = user != null ? user.UseSearchGrid : false }))
    </div>
</div>

<script src="~/js/inittexteditors.js"></script>