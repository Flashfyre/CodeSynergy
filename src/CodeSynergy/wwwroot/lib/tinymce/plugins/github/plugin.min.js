tinymce.PluginManager.add('github', function (editor, url) {
    // Add a button that opens a window
    editor.addButton('github', {
        icon: 'github',
        onclick: function (e) {
            if (githubID == null)
                githubID = prompt("Enter your GitHub ID");
            if (githubID != null && githubID != "") {
                if (githubRepoData == null)
                    sendGitHubRequest("users/" + githubID + "/repos");
                var githubResponseTimer = window.setInterval(function (e) {
                    if (githubRepoData != null) {
                        window.clearInterval(githubResponseTimer);
                        // Open window
                        editor.windowManager.open({
                            title: 'GitHub',
                            body: [
                                { type: 'container', layout: "fit", label: "Repositories", html: '<div id="github-repos" class="ztree"></div>' }
                            ],
                            width: $(".container").innerWidth(),
                            height: window.innerHeight * 0.8,
                            onsubmit: function (e) {
                                // Insert content when the window form is submitted
                                window.setTimeout(function (e) {
                                    if (githubFileContents != "") {
                                        var $codeSampleIcon = $(editor.editorContainer).find(".mce-i-codesample");
                                        if ($codeSampleIcon.length != 0) {
                                            $codeSampleIcon.trigger("click");
                                            window.setTimeout(function () {
                                                $(".mce-window textarea").val(githubFileContents);
                                                githubFileContents = "";
                                            }, 100);
                                        } else {
                                            editor.insertContent(githubFileContents);
                                            githubFileContents = "";
                                        }
                                    }
                                }, 500);
                                editor.windowManager.close();
                            }
                        });
                    }
                }, 10);
            }
        }
    });
});

function ReceiveGitHubResponse(response) {
    var data = response.data;

    githubRepoData = [];

    for (var d = 0; d < data.length; d++) {
        githubRepoData.push({ "name": data[d].name, "url": data[d].html_url });
    }
}

function sendGitHubRequest(path) {
    var script = document.createElement('script');
    script.src = 'https://api.github.com/' + path + '?callback=ReceiveGitHubResponse';

    document.getElementsByTagName('head')[0].appendChild(script);
}